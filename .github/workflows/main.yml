name: 🔧 Build & Test (modular)

on:
  schedule: [ { cron: "*/6 * * * *" } ]
  push: { branches: [ master ] }
  pull_request: {}
  workflow_dispatch: {}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.13" }
      - run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
          echo "⚠️ Lint warnings (non-blocking)"

  build_and_test:
    needs: lint
    runs-on: ubuntu-latest
    env: { PY_COLORS: "1" }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.13" }
      - run: |
          sudo apt-get update
          sudo apt-get install -y tzdata locales
          sudo locale-gen en_US.UTF-8
      - run: python -m pip install --upgrade pip wheel seleniumbase pyautogui python-xlib
      - run: seleniumbase install chromedriver
      - run: |
          echo "def test_example(): pass" > test_dummy.py
          pytest test_dummy.py --uc
      - run: |
          for p in /usr/bin/google-chrome /bin/google-chrome-stable /bin/chromium-browser /bin/chromium; do
            echo "$p exists? ->" $(test -f "$p" && echo Yes || echo No)
          done

  run_milus:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.13" }
      - run: |
          sudo apt-get update && sudo apt-get install -y curl gnupg lsb-release
          curl https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" \
            | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
          sudo apt update && sudo apt install -y cloudflare-warp
          sudo warp-cli --accept-tos registration new
          sudo warp-cli --accept-tos connect
          sleep 5 && sudo warp-cli --accept-tos status
          python milus.py --debug --chrome --xvfb --screenshot
      - uses: actions/upload-artifact@v4
        with:
          name: screenshot
          path: latest_logs
