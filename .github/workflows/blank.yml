name: üîß Build & Test

on:
  schedule:
    - cron: "*/6 * * * *"  # Every 6 minutes
  push:
    branches: [ master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: üêç Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      PY_COLORS: "1"

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.13"]

    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v4

    - name: üêç Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: üåç Set locale to UTF-8
      run: |
        sudo apt-get update
        sudo apt-get install -y tzdata locales
        sudo locale-gen en_US.UTF-8
        sudo update-locale LANG=en_US.UTF-8
        export LANG=en_US.UTF-8
        locale

    - name: üì¶ Upgrade pip and install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install seleniumbase pyautogui python-xlib

    - name: üßº Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
        echo "‚ö†Ô∏è Linting warnings above (non-blocking)"

    - name: üß™ Verify Python CLI tools
      run: |
        seleniumbase --help
        sbase --help

    - name: üì• Install chromedriver
      run: seleniumbase install chromedriver

    - name: üß™ Sanity check pytest works
      run: |
        echo "def test_example(): pass" > test_dummy.py
        pytest test_dummy.py --uc

    - name: üîç Check Chrome binary availability
      run: |
        for path in /usr/bin/google-chrome /bin/google-chrome-stable /bin/chromium-browser /bin/chromium; do
          echo "$path exists? ->" $(test -f "$path" && echo "Yes" || echo "No")
        done

    - name: üß≠ Detect actual Chrome binary used
      run: |
        python -c "from seleniumbase.core import detect_b_ver; print(detect_b_ver.get_binary_location('google-chrome'))"
        python -c "from seleniumbase import undetected; print(undetected.find_chrome_executable())"

    - name: üï∏Ô∏è Install Cloudflare WARP
      run: |
        sudo apt update
        sudo apt install -y curl gnupg lsb-release
        curl https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
        sudo apt update
        sudo apt install -y cloudflare-warp
        sudo warp-cli --accept-tos registration new
        sudo warp-cli --accept-tos connect
        sleep 5
        sudo warp-cli status

    - name: üß™ Run milus.py with debug
      run: |
        python milus.py --debug --chrome --xvfb --screenshot
    - uses: actions/upload-artifact@v4
      with:
        name: screenshot
        path: latest_logs
